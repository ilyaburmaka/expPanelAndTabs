{"ast":null,"code":"var _jsxFileName = \"/home/ilya/github/expPanelAndTabs/src/components/Tables/components/ContentsTables.js\";\nimport React, { Fragment } from 'react'; //libs\n\nimport PropTypes from 'prop-types';\n\nvar ContentText = function ContentText(_ref) {\n  var content = _ref.content;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, Object.keys(content).map(function (key) {\n    return key === 'name' ? React.createElement(\"span\", {\n      className: \"name\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, content[key]) : React.createElement(\"span\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, content[key]);\n  }));\n};\n\nContentText.propTypes = {\n  content: PropTypes.object.isRequired\n};\nexport { ContentText };","map":{"version":3,"sources":["/home/ilya/github/expPanelAndTabs/src/components/Tables/components/ContentsTables.js"],"names":["React","Fragment","PropTypes","ContentText","content","Object","keys","map","key","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACnC,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,GAArB,CAAyB,UAAAC,GAAG;AAAA,WAC3BA,GAAG,KAAK,MAAR,GACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,GAAG,EAAEA,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,OAAO,CAACI,GAAD,CADV,CADF,GAKE;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBJ,OAAO,CAACI,GAAD,CAAxB,CANyB;AAAA,GAA5B,CADH,CADF;AAaD,CAdD;;AAgBAL,WAAW,CAACM,SAAZ,GAAwB;AACtBL,EAAAA,OAAO,EAAEF,SAAS,CAACQ,MAAV,CAAiBC;AADJ,CAAxB;AAIA,SAASR,WAAT","sourcesContent":["import React, { Fragment } from 'react'\n//libs\nimport PropTypes from 'prop-types'\n\nconst ContentText = ({ content }) => {\n  return (\n    <Fragment>\n      {Object.keys(content).map(key =>\n        key === 'name' ? (\n          <span className=\"name\" key={key}>\n            {content[key]}\n          </span>\n        ) : (\n          <span key={key}>{content[key]}</span>\n        )\n      )}\n    </Fragment>\n  )\n}\n\nContentText.propTypes = {\n  content: PropTypes.object.isRequired\n}\n\nexport { ContentText }\n"]},"metadata":{},"sourceType":"module"}